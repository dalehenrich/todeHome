TDScriptLeafNode{#name:'pathIndex',#contents:'[ :topez :objIn :tokens :windowId | \n| tree population populationIndexSpec query halt create result |\ncreate := halt := false.\ntokens size > 1\n  ifTrue: [ \n    create := (tokens at: 2) = \'create\'.\n    tokens size > 2\n      ifTrue: [ halt := (tokens at: 3) = \'halt\' ] ].\ntree := (topez lookup: \'/home/index/family\') dotSelfObject.\npopulation := tree population.\npopulationIndexSpec := GsIndexSpec new\n  equalityIndex: \'each.#mother.middleName\' lastElementClass: String;\n  yourself.\nIndexManager current removeAllIncompleteIndexesOn: population.\n[ \ncreate\n  ifTrue: [ populationIndexSpec createIndexesOn: population ].\nresult := halt\n  ifTrue: [ \n    population halt.\n    population ]\n  ifFalse: [ \n    | expected options name |\n    options := GsQuery defaultQueryOptions + GsQueryOptions cacheQueryResult.\n    name := \'Penny\'.\n    expected := population\n      select: [ :each | each mother ifNil: [ false ] ifNotNil: [ :mother | mother middleName = name ] ].\n    query := (GsQuery\n      fromString: \'each.#mother.middleName = name\'\n      options: options)\n      bind: \'name\' to: name;\n      on: population;\n      yourself.\n    expected size = query size\n      ifFalse: [ nil error: \'size mismatch\' ].\n    expected\n      do: [ :each | \n        (query includes: each)\n          ifFalse: [ nil error: \'contents mismatch\' ] ].\n    query queryResult ] ]\n  ensure: [ IndexManager current removeAllIncompleteIndexesOn: population ].\ntrue\n  ifTrue: [ populationIndexSpec removeIndexesFrom: population ].\nresult ]',#creationTime:DateAndTime['2013-12-06T17:02:00.53422594070435-08:00'],#modificationTime:@2}