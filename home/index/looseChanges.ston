TDScriptLeafNode{#name:'looseChanges',#contents:'[ :topez :objIn :tokens :windowId | \n| current packages package loose packagePrefixes |\ncurrent := GsPackagePolicy current.\npackages := {}.\ncurrent packages_Do: [ :pkg | packages add: pkg ].\npackage := packages detect: [ :pkg | pkg symbolDict name == #\'UserGlobals\' ].\nloose := {}.\npackagePrefixes := MCWorkingCopy allManagers\n  collect: [ :wc | \'*\' , wc packageName asLowercase ].\npackage\n  behaviorAndMethodDictDo: [ :beh :methodDict | \n    methodDict keys\n      do: [ :selector | \n        | cat |\n        (beh == Behavior and: [ selector == #\'_compileMethod:category:using:\' ])\n          not\n          ifTrue: [ \n            | add |\n            add := false.\n            cat := (beh categoryOfSelector: selector) asString asLowercase.\n            (cat beginsWith: \'*\')\n              ifTrue: [ \n                packagePrefixes\n                  detect: [ :prefix | cat beginsWith: prefix ]\n                  ifNone: [ add := true ] ]\n              ifFalse: [ add := true ].\n            add\n              ifTrue: [ \n                | ar persistentMethodDict sessionMethod |\n\t\t\t\t\tar := {beh.\n                            cat.\n                            selector} .\n                persistentMethodDict := beh persistentMethodDictForEnv: 0.\n                (persistentMethodDict at: selector ifAbsent: [  ])\n\t\t\t\t\tifNil:[loose\n                          add:ar]\n                  ifNotNil: [ :baseMethod | \n                    sessionMethod := beh compiledMethodAt: selector.\n                    sessionMethod sourceString ~= baseMethod sourceString\n                      ifTrue: [ \n                        loose\n                          add:ar\n                            ] ] ] ] ] ].\nloose ]',#creationTime:DateAndTime['2013-12-06T17:02:00.47407698631287-08:00'],#modificationTime:@2}