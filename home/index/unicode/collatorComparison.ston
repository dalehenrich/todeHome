TDScriptLeafNode{#name:'collatorComparison',#contents:'[ :topez :objIn :tokens :windowId | \n| tree population populationIndexSpec query halt create result collator_VietNam collator_Germany collator_Greece collator_UnitedStates collator_POSIX |\n\"http://demo.icu-project.org/icu-bin/locexp?d_=en&x=col&_=root\nhttp://www.columbia.edu/~fdc/utf8/\nhttp://www.localeplanet.com/icu/\"\n\"simple enumerated index\"\ncreate := halt := false.\ntokens size > 1\n  ifTrue: [ \n    halt := (tokens at: 2) = \'halt\'.\n    create := (tokens at: 2) = \'create\' ].\ntree := (topez lookup: \'/home/index/family\') dotSelfObject.\npopulation := tree population.\ncollator_VietNam := IcuCollator forLocaleNamed: \'vi_VN\'.\ncollator_Greece := IcuCollator forLocaleNamed: \'el_GR\'.\ncollator_Germany := IcuCollator forLocaleNamed: \'de_DE\'.\ncollator_UnitedStates := IcuCollator forLocaleNamed: \'en_US\'.\ncollator_POSIX := IcuCollator forLocaleNamed: \'en_US_POSIX\'.\npopulationIndexSpec := GsIndexSpec new\n  unicodeIndex: \'each.unicodeField\' collator: collator_Greece;\n  yourself.\nIndexManager current removeAllIncompleteIndexesOn: population.\n[ \ncreate\n  ifTrue: [ populationIndexSpec createIndexesOn: population ].\nresult := halt\n  ifTrue: [ \n    population halt.\n    population ]\n  ifFalse: [ \n    | expected_VN expected_GR expected_DE expected_ASCII expected_US expected_POSIX options unicodeField |\n    options := GsQuery defaultQueryOptions + GsQueryOptions cacheQueryResult.\n    unicodeField := \'\'.\n    expected_VN := population asArray\n      sorted: [ :a :b | (a stringField compareTo: b stringField collator: collator_VietNam) <= 0 ].\n    expected_DE := population asArray\n      sorted: [ :a :b | (a stringField compareTo: b stringField collator: collator_Germany) <= 0 ].\n    expected_GR := population asArray\n      sorted: [ :a :b | (a stringField compareTo: b stringField collator: collator_Greece) <= 0 ].\n    expected_US := population asArray\n      sorted: [ :a :b | (a stringField compareTo: b stringField collator: collator_UnitedStates) <= 0 ].\n    expected_POSIX := population asArray\n      sorted: [ :a :b | (a stringField compareTo: b stringField collator: collator_POSIX) <= 0 ].\n    expected_ASCII := population asArray\n      sorted: [ :a :b | a stringField <= b stringField ].\n    query := (GsQuery fromString: \'each.unicodeField = string\' options: options)\n      bind: \'string\' to: unicodeField;\n      on: population collator: collator_VietNam;\n      yourself.\n    result := {(expected_VN collect: [ :each | each stringField ]).\n    (expected_DE collect: [ :each | each stringField ]).\n    (expected_GR collect: [ :each | each stringField ]).\n    (expected_US collect: [ :each | each stringField ]).\n    (expected_POSIX collect: [ :each | each stringField ]).\n    (expected_ASCII collect: [ :each | each stringField ])} ] ]\n  ensure: [ IndexManager current removeAllIncompleteIndexesOn: population ].\ntrue\n  ifTrue: [ populationIndexSpec removeIndexesFrom: population ].\nresult ]',#creationTime:DateAndTime['2013-12-06T17:02:00.62880396842957-08:00'],#modificationTime:@2}