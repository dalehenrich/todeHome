TDScriptLeafNode{#name:'simpleIndex',#contents:'[ :topez :objIn :tokens :windowId | 
| tree population populationIndexSpec query halt create result collator |
create := halt := false.
tokens size > 1
  ifTrue: [ 
    halt := (tokens at: 2) = \'halt\'.
    create := (tokens at: 2) = \'create\' ].
tree := (topez lookup: \'/home/index/family\') dotSelfObject.
population := tree population.
collator := IcuCollator forLocaleNamed: \'el_GR\'.
populationIndexSpec := GsIndexSpec new
  unicodeIndex: \'each.unicodeField\' collator: collator;
  yourself.
IndexManager current removeAllIncompleteIndexesOn: population.
[ 
create
  ifTrue: [ populationIndexSpec createIndexesOn: population ].
result := halt
  ifTrue: [ 
    population halt.
    population ]
  ifFalse: [ 
    | sorted sorted_ASCII expected options unicodeField |
    options := GsQuery defaultQueryOptions + GsQueryOptions cacheQueryResult.
    unicodeField := \'\u00CE\u009A\u00CF\u0085\u00CF\u0081\u00CE\u00B9\u00CE\u00B1\u00CE\u00BA\u00CE\u00AE\' asUnicodeString.
    sorted := population asArray
      sorted: [ :a :b | (a unicodeField compareTo: b unicodeField collator: collator) <= 0 ].
    sorted_ASCII := population asArray
      sorted: [ :a :b | a stringField <= b stringField ].
    expected := population
      select: [ :each | (each unicodeField compareTo: unicodeField collator: collator) = 0 ].
    query := (GsQuery fromString: \'each.unicodeField = string\' options: options)
      bind: \'string\' to: unicodeField;
      on: population collator: collator;
      yourself.
    result := {(sorted collect: [ :each | each unicodeField ]).
    (expected collect: [ :each | each unicodeField ]).
    (query collect: [ :each | each unicodeField ]).
\t\t\t(query queryResult collect: [ :each | each unicodeField ])} ] ]
  ensure: [ IndexManager current removeAllIncompleteIndexesOn: population ].
true
  ifTrue: [ populationIndexSpec removeIndexesFrom: population ].
result ]',#creationTime:DateAndTime['2013-12-06T17:30:31.50770306587219-08:00'],#modificationTime:@2}