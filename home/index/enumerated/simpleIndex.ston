TDScriptLeafNode{#name:'simpleIndex',#contents:'[ :topez :objIn :tokens :windowId | 
| tree population populationIndexSpec query halt create result |
\"simple enumerated index\"
create := halt := false.
tokens size > 1
  ifTrue: [ 
    halt := (tokens at: 2) = \'halt\'.
    create := (tokens at: 2) = \'create\' ].
tree := (topez lookup: \'/home/index/family\') dotSelfObject.
population := tree population.
populationIndexSpec := GsIndexSpec new
  equalityIndex: \'each.firstName|lastName\' lastElementClass: String;
  yourself.
IndexManager current removeAllIncompleteIndexesOn: population.
[ 
create
  ifTrue: [ populationIndexSpec createIndexesOn: population ].
result := halt
  ifTrue: [ 
    population halt.
    population ]
  ifFalse: [ 
    | expected options name |
    options := GsQuery defaultQueryOptions + GsQueryOptions cacheQueryResult.
\t\t\tname := \'Jessie\'.
    expected := (GsQuery
      fromString: \'(each.firstName = name) | (each.lastName = name)\'
      options: options)
      on: population;
      bind: \'name\' to: name;
      yourself.
    query := (GsQuery
      fromString: \'each.firstName|lastName = name\'
      options: options)
      bind: \'name\' to: name;
      on: population;
      yourself.
    expected size = query size
      ifFalse: [ nil error: \'size mismatch\' ].
    expected
      do: [ :each | 
        (query includes: each)
          ifFalse: [ nil error: \'contents mismatch\' ] ].
    query queryResult ] ]
  ensure: [ IndexManager current removeAllIncompleteIndexesOn: population ].
true
  ifTrue: [ populationIndexSpec removeIndexesFrom: population ].
result ]',#creationTime:DateAndTime['2013-12-06T17:30:31.07747888565063-08:00'],#modificationTime:@2}