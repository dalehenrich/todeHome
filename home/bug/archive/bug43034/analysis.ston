TDTxtLeafNode{#name:'analysis',#contents:Text{#string:'I believe that the fundamental bug has to do with consistency ... right now the ordering of a String and Unicode string is a function of which character is compared first ... so if we can be consistent in our comparison in image and C code, we are okay ...

dkh 12/29/2013 12:34
--------
xx shows that the String to DoubleByteString comparison is currently inconsistent with the Unicode to Unicode comparison of the same strings ... so it implies that _idxFor* messages involving unicode guys have to be compared WITHOUT USING A COLLATOR unless a collator is explicitly supplied ...

dkh 12/29/2013 13:46
--------
Part of what needs to be done is to add #asString to each of the Unicode classes to return the \"native\" string, like MultiByteString (I think).

dkh 12/29/2013 16:33
--------
final bit is to convert the _idx*CharacterCollection in Unicode classes to use asString to convert arg ... ala Unicode7>>_idxForCompareCharacterCollectionGreaterThanOrEqualToSelf:

dkh 12/29/2013 18:00
--------
The real final bit is to change RelRelate to perform the same conversions and 
comparisons...

dkh 12/29/2013 20:22
--------
looks like the String instances are not being encoded correctly... (4th slot is zero) for Unicode indexes:

1@           -> \'monday\'
2@           -> \'monday\'
3@           -> -432345564227567616
4@           -> 0
5@           -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
6@           -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
7@           -> -432345564227567616
8@           -> 0
.......[Unicode instances...]
49@          -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
50@          -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
51@          -> -274088112717811711
52@          -> 22559811099561
53@          -> \'monday\'
54@          -> \'monday\'
55@          -> -414256114685159423
56@          -> 12137595011072

dkh 12/29/2013 21:43
--------
Here are the same entries for equalityIndex (which sort \"correctly\"):

17@          -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
18@          -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
19@          -> -403515283267584000
20@          -> 5497558138880
21@          -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
22@          -> \'fl\u00C3\u00BC\u00C3\u009Fe\'
23@          -> -288118224153674752
24@          -> 6455342465024
25@          -> \'monday\'
26@          -> \'monday\'
27@          -> -401542271844910848
28@          -> 6597069766656
29@          -> \'monday\'
30@          -> \'monday\'
31@          -> -401542271844910848
32@          -> 6597069766656

dkh 12/29/2013 21:57
--------
String class>>withAll: is primitive 294 ... most likely need to convert unicode instances to native class instance for comparison and encrypting ... inverse of what was done to convert native class instances to unicode...

dkh 12/30/2013 06:46
------------------------------
  #1 [99485953 sz:59  String] IcuSortedCollectionTestCase debug: #testUnorderedCollection

dkh 12/29/2013 21:57
--------
need to go back to the version where I did the _idxForCompareUnicode* family of messages since we\'re going to coerce native strings to Unicode:
  - 43601  P2  String/Unicode compare needs to coerce to Unicode

dkh 12/30/2013 16:16
--------
[ernie0]
[105142017 sz:1  Array]  a Array
  #1 [105142785 sz:55  String] IXQueryUnicodeTestCase debug: #testLessThanIndexedQuery
ERROR: WRONG VALUE

dkh 12/30/2013 17:56
--------
Turns out that I was too aggressive removing some of the _idxFor*:collator: methods, namely the implementations in UndefinedObject are REQUIRED.',#runs:RunArray{#runs:[258,20,306,20,1,9,144,21,1,9,111,546,1,1483,1,322],#values:[[],[TextColor{#color:Color{#rgb:0}}],[],[TextColor{#color:Color{#rgb:0}}],@10,[TextColor{#color:@13}],[],[TextColor{#color:Color{#rgb:0}}],@16,[TextColor{#color:@19}],[],[TextColor{#color:Color{#rgb:0}}],[@24,TextEmphasis{#emphasisCode:1,#setMode:true}],[TextColor{#color:Color{#rgb:0}}],[@29,TextEmphasis{#emphasisCode:1,#setMode:true}],[TextColor{#color:Color{#rgb:0}}]],#lastIndex:nil,#lastRun:nil,#lastOffset:nil}},#creationTime:DateAndTime['2013-12-30T21:52:49.36991596221924-08:00'],#modificationTime:@36}