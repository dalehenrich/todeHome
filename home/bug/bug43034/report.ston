TDTxtLeafNode{#name:'report',#contents:Text{#string:'We allow an equality index to contain a mixture of String and Unicode
objects, which can lead to failed lookups in the Btree
for an equality index. Specifically the < and > methods may produce
different results for a String, Unicode7 pair depending on which
class is the receiver . Unicode receivers will use the current
IcuCollator default to do the compare.

For example, a mix of String and Unicode7 observed in the kermit repository.
Likewise DoubleByteString and Unicode16 is a problem.

Should we specifically exclude Unicode strings from being added
to an index in 3.1.0.x ?
------------------------------
dkh 12/29/2013 17:59
------------------------------
- implemented _idxFor*. When no collator is specified, Unicode instances are 
  converted to a native String instance for comparison. Only \"clean\" way to 
  handle Unicode strings when no collator specified.
- implement #asString for Unicode classes to convert to native String instance.
- make sure that Symbol, DoubleByteSymbol, and QuadByteSymbol instances fail
  comparison when using collator ... no Unicode symbols so this is the correct
  behavior...also fail for any non-CharacterCollection classes ...',#runs:RunArray{#runs:[1175],#values:[[TextColor{#color:Color{#rgb:0}}]],#lastIndex:nil,#lastRun:nil,#lastOffset:nil}},#creationTime:DateAndTime['2013-12-24T07:42:36.19235610961914-08:00'],#modificationTime:DateAndTime['2013-12-29T17:59:43.17458510398865-08:00']}