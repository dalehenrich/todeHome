TDScriptLeafNode{#name:'mail2',#contents:'[ :topez :objIn :tokens :windowId | \n| tool configurationClass versionString methodSectionMap orderedAttributeList packageVersions |\nconfigurationClass := ConfigurationOfMetacello.\nversionString := \'1.0-beta.32\'.\ntool := MCTodeDeployTool new.\norderedAttributeList := #(#\'common\' #\'squeakCommon\' #\'pharo\' #\'squeak\' #\'gemstone\' #\'pharo1.1.x\' #\'pharo1.2.x\' #\'pharo1.3.x\' #\'pharo1.4.x\' #\'pharo2.x\' #\'pharo3.x\' #\'gs3.1.0.x\' #\'gs3.2.0.x\').\nmethodSectionMap := tool\n  createMethodSectionMapFor: configurationClass\n  attributeList: orderedAttributeList\n  version: versionString.\npackageVersions := Dictionary new.\norderedAttributeList\n  do: [ :attribute | \n    | sections |\n    sections := methodSectionMap\n      at: attribute asMetacelloAttributePath\n      ifAbsent: [ #() ].\n    sections\n      do: [ :methodSection | \n        | versionSpec |\n        versionSpec := methodSection versionSpec.\n        versionSpec packages\n          specListDo: [ :packageSpec | \n            | file |\n            (file := packageSpec getFile) notNil\n              ifTrue: [ \n                | ref refs |\n                ref := GoferVersionReference name: file.\n                ref versionNumber > 0\n                  ifTrue: [ \n                    \"only record packages whose names include a version number\"\n                    refs := packageVersions\n                      at: attribute\n                      ifAbsent: [ packageVersions at: attribute put: Set new ].\n                    refs add: ref ] ] ] ] ].\n{packageVersions. methodSectionMap} ]',#creationTime:DateAndTime['2013-12-06T17:02:00.14905905723572-08:00'],#modificationTime:@2}