TDScriptLeafNode{#name:'newCommit',#contents:'[ :topez :objIn :tokens :command | \n| opts args |\n\"for help: /home/bin/commit -h\"\ncommand\n  getOptsMixedLongShort:\n    {#(\'help\' $h #\'none\').\n    #(\'cypress\' $y #\'none\').\n    #(\'git\' $g #\'none\').\n    #(\'config\' $c #\'none\')}\n  optionsAndArguments: [ :options :operands | \n    opts := options.\n    args := operands ].\nopts\n  at: \'help\'\n  ifAbsent: [ \n    | mmTool commitedVersions projectName commitMessage |\n    projectName := args at: 1.\n    commitMessage := args at: 2.\n    mmTool := topez toolInstanceFor: \'mm\'.\n    (commitMessage beginsWith: \'@\')\n      ifTrue: [ commitMessage := (mmTool resolveAtPathReference: commitMessage) asString ].\n    Transcript\n      cr;\n      show: \'======= committing \' , projectName printString , \'=======\'.\n    commitedVersions := mmTool\n      mmCommit: projectName\n      commitMessage: commitMessage.\n    commitedVersions isEmpty\n      ifTrue: [ \'No dirty packages to commit\' ]\n      ifFalse: [ \n        | repo |\n        repo := (topez lookup: \'repo\') dotSelfObject.\n        repo class description = MCFileTreeRepository description\n          ifTrue: [ \n            |   gitRepoDir gitTool commitMessageFileName |\n            gitRepoDir := (topez lookup: \'gitRepo\') dotSelfObject.\n            gitTool := topez toolInstanceFor: \'git\'.\n            commitMessageFileName := gitTool createTmpFileWith: commitMessage.\n            gitTool\n              gitaddIn: gitRepoDir with: \'.\';\n              gitcommitIn: gitRepoDir\n                with: \'-a --file=\' , commitMessageFileName;\n              gitstatusIn: gitRepoDir with: \'\'.\n            Transcript\n              cr;\n              show: \'==============\'.\n            \n            commitedVersions ] ] ]\n  ifPresent: [ :ignored | \n    TDManPage\n      viewManPage:\n        \'NAME\n  commit - commit project\nSYNOPSIS\n  commit [-h|--help][--git][--cypress][--config]\n         <project-name> <commit-message>|@<commit-message-path>\nDESCRIPTION\n  The dirty packages in the project are committed, then a git commit is \n  performed.\nEXAMPLES\n  /home/bin/commit Tode `commit message`\n  /home/bin/commit Tode @commitMessage\n\'\n      topez: topez ] ]',#creationTime:DateAndTime['2013-12-06T16:55:55.04977488517761-08:00'],#modificationTime:@2}