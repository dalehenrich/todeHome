TDScriptLeafNode{#name:'debug',#contents:'[ :topez :objIn :tokens :command | 
| opts args |
\"for help: ./debug -h\"
command
  getOptsMixedLongShort:
    {#(\'help\' $h #\'none\').
    #(\'class\' $c #\'none\')}
  optionsAndArguments: [ :options :operands | 
    opts := options.
    args := operands ].
opts
  at: \'help\'
  ifAbsent: [ 
    opts
      at: \'class\'
      ifAbsent: [ 
        | symbolList cls testClassName testSelector |
        testClassName := args at: 1.
        testSelector := args at: 2.
        symbolList := (AllUsers
          userWithId: \'Ernie\'
          ifAbsent: [ self error: \'No user named\' , self username printString , \' found.\' ])
          symbolList.
        cls := symbolList objectNamed: testClassName asSymbol.
        cls debug: testSelector asSymbol ]
      ifPresent: [ :ignored | 
        | symbolList cls testClassName |
        testClassName := args at: 1.
        symbolList := (AllUsers
          userWithId: \'Ernie\'
          ifAbsent: [ self error: \'No user named\' , self username printString , \' found.\' ])
          symbolList.
        cls := symbolList objectNamed: testClassName asSymbol.
        cls runEx ] ]
  ifPresent: [ :ignored | 
    TDManPage
      viewManPage:
        \'NAME
  debug - debug Ernie tests as Ernie
SYNOPSIS
  debug [-h|--help] <test-class-name> <test-selector>
  debug <test-class-name> <test-selector>
  debug -c|--class <test-class-name> 

DESCRIPTION
EXAMPLES
  ./debug --help
  ./debug -h

  ./debug GsQueryGrammarTestCase testLiteral1
  ./debug -c GsQueryGrammarTestCase 
\'
      topez: topez ] ]',#creationTime:DateAndTime['2013-12-06T17:30:30.49714303016663-08:00'],#modificationTime:DateAndTime['2013-12-09T21:02:30.93372011184692-08:00']}